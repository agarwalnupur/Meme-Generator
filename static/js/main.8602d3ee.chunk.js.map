{"version":3,"sources":["components/template.jsx","components/meme.jsx","App.js","index.js"],"names":["Template","templates","setMeme","map","item","className","onClick","src","url","alt","id","Meme","meme","useState","template_id","username","password","boxes","form","setForm","Array","box_count","_","index","type","placeholder","onChange","e","newBoxes","text","target","value","box","fetch","then","res","json","data","console","log","App","setTemplates","useEffect","memes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAaeA,EAZE,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,QAC1B,OACI,8BACKD,EAAUE,KAAI,SAAAC,GAAI,OACf,qBAAoBC,UAAW,WAAWC,QAAW,kBAAMJ,EAAQE,IAAnE,SACI,qBAAKG,IAAMH,EAAKI,IAAKC,IAAM,UADpBL,EAAKM,U,cCsCjBC,EAzCF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAMV,EAAY,EAAZA,QACrB,EAAyBW,mBAAS,CAC9BC,YAAaF,EAAKF,GAClBK,SAAW,eACXC,SAAW,kBACXC,MAAQ,KAJZ,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAAQ,sBAAKd,UAAW,OAAhB,UACA,qBAAKE,IAAOK,EAAKJ,IAAKC,IAAI,SAAa,uBACvC,8BAEQ,YAAIW,MAAMR,EAAKS,YAAYlB,KAAI,SAACmB,EAAGC,GAAJ,OAC3B,uBAAOC,KAAO,OAAoBC,YAAW,uBAAoBF,EAAQ,GAAKG,SAAY,SAACC,GACvF,IAAMC,EAAWV,EAAKD,MACtBW,EAASL,GAAS,CAACM,KAAOF,EAAEG,OAAOC,OACnCZ,EAAQ,2BAAID,GAAL,IAAYD,MAAQW,OAHJL,QASnC,wBAAQjB,QA5BF,WACd,IAAIE,EAAG,6DAAyDU,EAAKJ,YAA9D,qBAAsFI,EAAKH,SAA3F,qBAAgHG,EAAKF,UAC5HE,EAAKD,MAAMd,KAAI,SAAC6B,EAAIT,GAChBf,GAAG,iBAAae,EAAb,mBAA6BS,EAAIH,SAGxCI,MAAMzB,GACL0B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFC,QAAQC,IAAIF,EAAKA,KAAK7B,KACtBN,EAAQ,2BAAIU,GAAL,IAAWJ,IAAM6B,EAAKA,KAAK7B,WAkB9B,yBACA,wBAAQF,QAAU,kBAAMJ,EAAQ,OAAhC,iCCdGsC,MApBf,WACE,MAAmC3B,mBAAS,IAA5C,mBAAOZ,EAAP,KAAmBwC,EAAnB,KACA,EAAyB5B,mBAAS,MAAlC,mBAAOD,EAAP,KAAcV,EAAd,KASA,OAREwC,qBAAU,WACVT,MAAM,qCACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJI,EAAaJ,EAAKA,KAAKM,YAGxB,IAED,sBAAKtC,UAAU,MAAf,UACC,gDACU,OAATO,EAAgB,cAAC,EAAD,CAAUX,UAAWA,EAAWC,QAAWA,IAAa,cAAC,EAAD,CAAMU,KAAQA,EAAMV,QAAWA,QCf7G0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8602d3ee.chunk.js","sourcesContent":["\r\nconst Template = ({templates, setMeme}) =>{\r\n    return(\r\n        <div>\r\n            {templates.map(item =>(\r\n                <div key= {item.id} className= \"template\" onClick = {() => setMeme(item)}>\r\n                    <img src= {item.url} alt = \"meme\"></img>\r\n                </div>\r\n            ))}\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Template;","import { useState } from \"react\";\r\n\r\nconst Meme = ({meme, setMeme}) =>{\r\nconst [form , setForm] = useState({\r\n    template_id :meme.id , \r\n    username : \"NupurAgarwal\" , \r\n    password : \"He8@88j97n@ByuT\" , \r\n    boxes : []\r\n\r\n})\r\nconst createMeme =() =>{\r\n    let url = ` https://api.imgflip.com/caption_image?template_id=${form.template_id}&username=${form.username}&password=${form.password}`;\r\n    form.boxes.map((box,index) =>{\r\n        url +=`&boxes[${index}][text]=${box.text}`\r\n       \r\n    })\r\n    fetch(url)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n        console.log(data.data.url)\r\n        setMeme({...meme, url : data.data.url})\r\n    })\r\n\r\n}\r\nreturn (<div className= \"meme\"> \r\n        <img src = {meme.url} alt=\"meme\"></img><br/>\r\n        <div>\r\n            {\r\n                [...Array(meme.box_count)].map((_, index) => (\r\n                    <input type = \"text\" key= {index} placeholder = {`Meme Caption ${index + 1}`} onChange = {(e) =>{\r\n                        const newBoxes = form.boxes;\r\n                        newBoxes[index] = {text : e.target.value}\r\n                        setForm({...form , boxes : newBoxes})\r\n                    }}>\r\n                    </input>\r\n                ))\r\n            }\r\n        </div>\r\n            <button onClick={createMeme}>Create Meme</button>\r\n            <button onClick= {() => setMeme(null) }>Choose Template</button>\r\n        </div>);\r\n}\r\n\r\nexport default Meme;","import {useEffect , useState} from 'react';\nimport './App.css';\nimport Template  from './components/template';\nimport Meme from './components/meme';\n\nfunction App() {\n  const [templates , setTemplates] = useState([]);\n  const [meme , setMeme] = useState(null);\n    useEffect(() => {\n    fetch('https://api.imgflip.com/get_memes')\n    .then(res => res.json())\n    .then(data =>{\n      setTemplates(data.data.memes);\n\n    })\n  }, [])\n  return (\n    <div className=\"App\">\n     <h1>Meme Generator</h1>\n     {meme === null ? <Template templates={templates} setMeme = {setMeme}/> : <Meme meme = {meme} setMeme = {setMeme} />}\n        \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}